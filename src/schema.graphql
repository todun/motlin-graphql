type Query {
  me: User!
  stores: [Store!]!
  store(id: ID!): Store!
  keys(storeId: ID): [Key!]!
  gateways: [Gateway!]!
  gateway(slug: String!): Gateway!
  products(
    dir: SORT_DIR
    limit: Int
    offset: Int
    sort: PRODUCT_SORT_FIELDS
  ): [Product!]
  product(id: ID!): Product
}

type Mutation {
  register(
    name: String!
    email: String!
    password: String!
    company: String
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createToken(
    client_id: String!
    client_secret: String
    grant_type: GRANT_TYPE
  ): AuthPayload!
  refreshToken(token: String!): AuthPayload!
  renameStore(id: ID!, newName: String!): Store!
  createStore(name: String!): Store!
  switchStore(id: ID!): SuccessPayload!
}

type Product {
  id: ID!
  name: String!
  description: String!
  sku: String!
  slug: String!
  price: [ProductPrice!]
}

type ProductPrice {
  amount: Int!
  currency: String!
  includes_tax: Boolean!
}

type User {
  id: ID!
  name: String!
  company: String
  email: String!
}

type Store {
  id: ID!
  noneUuid: ID!
  name: String!
  users: [User!]!
}

type Key {
  user_id: ID!
  store_id: ID!
  client_id: String!
  client_secret: String!
}

type AuthPayload {
  identifier: String!
  access_token: String!
  refresh_token: String!
  token_type: String!
  expires: Int!
  expires_in: Int!
  user: User!
}

type SuccessPayload {
  success: Boolean!
  message: String
}

union Gateway = Stripe | Adyen | Braintree | CardConnect | Manual

type Stripe {
  name: String
  slug: String
  login: String
  enabled: Boolean
}

type Adyen {
  name: String
  slug: String
  username: String
  merchant_account: String
  password: String
  test: Boolean
  enabled: Boolean
}

type Braintree {
  name: String
  slug: String
  merchant_id: String
  private_key: String
  public_key: String
  environment: String
  enabled: Boolean
}

type CardConnect {
  name: String
  slug: String
  merchant_id: String
  username: String
  password: String
  test: Boolean
  enabled: Boolean
}

type Manual {
  name: String
  slug: String
  enabled: Boolean
}

enum GRANT_TYPE {
  implicit
  client_credentials
}

enum SORT_DIR {
  asc
  desc
}

enum PRODUCT_SORT_FIELDS {
  description
  name
  sku
  slug
}
